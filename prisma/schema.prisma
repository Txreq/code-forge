datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    questions     Question[]
    bookmarks     Bookmark[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Answer {
    id       String    @id @unique @default(cuid())
    content  String
    datetime DateTime  @default(now())
    question Question?
}

model Question {
    id          String    @id @unique @default(cuid())
    user_id     String
    user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
    content     String
    datetime    DateTime  @default(now())
    answer_id   String    @unique
    answer      Answer?   @relation(fields: [answer_id], references: [id], onDelete: Cascade)
    bookmark    Bookmark? @relation(fields: [bookmark_id], references: [id], onDelete: Cascade)
    bookmark_id String?
}

model Bookmark {
    id        String     @id @unique @default(cuid())
    user      User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id   String     @map("userId")
    title     String
    questions Question[]
}
